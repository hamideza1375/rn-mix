{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createMultiStyleIconSet;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _createIconSet = _interopRequireWildcard(require(\"./create-icon-set\"));\n\nvar _jsxFileName = \"/Users/hamid/Desktop/mixprj/node_modules/react-native-vector-icons/lib/create-multi-style-icon-set.js\";\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction createMultiStyleIconSet(styles) {\n  var optionsInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var styleNames = Object.keys(styles);\n\n  if (styleNames.length === 0) {\n    throw new Error('You need to add at least one style');\n  }\n\n  var options = (0, _extends2.default)({\n    defaultStyle: styleNames[0],\n    fallbackFamily: function fallbackFamily() {\n      return styleNames[0];\n    },\n    glyphValidator: function glyphValidator() {\n      return true;\n    }\n  }, optionsInput);\n  var iconSets = styleNames.reduce(function (acc, name) {\n    var style = styles[name];\n    acc[name] = (0, _createIconSet.default)(style.glyphMap || {}, style.fontFamily || '', style.fontFile || '', style.fontStyle || {});\n    return acc;\n  }, {});\n\n  function styleFromProps(props) {\n    return Object.keys(props).reduce(function (result, propName) {\n      return styleNames.indexOf(propName) !== -1 && props[propName] === true ? propName : result;\n    }, options.defaultStyle);\n  }\n\n  function getIconSetForProps(props) {\n    var name = props.name;\n    var style = styleFromProps(props);\n    if (options.glyphValidator(name, style)) return iconSets[style];\n    var family = options.fallbackFamily(name);\n\n    if (styleNames.indexOf(family) === -1) {\n      return options.defaultStyle;\n    }\n\n    return iconSets[family];\n  }\n\n  function selectIconClass(iconSet, iconClass) {\n    return iconClass.length > 0 ? iconSet[iconClass] : iconSet;\n  }\n\n  function reduceProps(props) {\n    return Object.keys(props).reduce(function (acc, prop) {\n      if (styleNames.indexOf(prop) === -1) {\n        acc[prop] = props[prop];\n      }\n\n      return acc;\n    }, {});\n  }\n\n  function getStyledIconSet(style) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n    if (styleNames.indexOf(style) === -1) {\n      return iconSets[options.defaultStyle];\n    }\n\n    return !name ? iconSets[styleFromProps((0, _defineProperty2.default)({}, style, true))] : getIconSetForProps((0, _defineProperty2.default)({\n      name: name\n    }, style, true));\n  }\n\n  function getImageSource(name) {\n    var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _createIconSet.DEFAULT_ICON_SIZE;\n    var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _createIconSet.DEFAULT_ICON_COLOR;\n    var style = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : options.defaultStyle;\n    return getStyledIconSet(style, name).getImageSource(name, size, color);\n  }\n\n  function getFontFamily() {\n    var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : options.defaultStyle;\n    return getStyledIconSet(style).getFontFamily();\n  }\n\n  function getRawGlyphMap() {\n    var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : options.defaultStyle;\n    return getStyledIconSet(style).getRawGlyphMap();\n  }\n\n  function hasIcon(name) {\n    var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : options.defaultStyle;\n    return options.glyphValidator(name, style);\n  }\n\n  function createStyledIconClass() {\n    var selectClass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n    var IconClass = function (_PureComponent) {\n      (0, _inherits2.default)(IconClass, _PureComponent);\n\n      var _super = _createSuper(IconClass);\n\n      function IconClass() {\n        (0, _classCallCheck2.default)(this, IconClass);\n        return _super.apply(this, arguments);\n      }\n\n      (0, _createClass2.default)(IconClass, [{\n        key: \"render\",\n        value: function render() {\n          var selectedIconSet = getIconSetForProps(this.props);\n          var SelectedIconClass = selectIconClass(selectedIconSet, selectClass);\n          var props = reduceProps(this.props);\n          return _react.default.createElement(SelectedIconClass, (0, _extends2.default)({}, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 16\n            }\n          }));\n        }\n      }]);\n      return IconClass;\n    }(_react.PureComponent);\n\n    IconClass.propTypes = styleNames.reduce(function (acc, name) {\n      acc[name] = _propTypes.default.bool;\n      return acc;\n    }, {});\n    IconClass.defaultProps = styleNames.reduce(function (acc, name) {\n      acc[name] = false;\n      return acc;\n    }, {});\n    return IconClass;\n  }\n\n  var Icon = createStyledIconClass();\n  Icon.Button = createStyledIconClass('Button');\n  Icon.getStyledIconSet = getStyledIconSet;\n  Icon.getImageSource = getImageSource;\n  Icon.getFontFamily = getFontFamily;\n  Icon.getRawGlyphMap = getRawGlyphMap;\n  Icon.hasIcon = hasIcon;\n  return Icon;\n}","map":{"version":3,"names":["createMultiStyleIconSet","styles","optionsInput","styleNames","Object","keys","length","Error","options","defaultStyle","fallbackFamily","glyphValidator","iconSets","reduce","acc","name","style","createIconSet","glyphMap","fontFamily","fontFile","fontStyle","styleFromProps","props","result","propName","indexOf","getIconSetForProps","family","selectIconClass","iconSet","iconClass","reduceProps","prop","getStyledIconSet","getImageSource","size","DEFAULT_ICON_SIZE","color","DEFAULT_ICON_COLOR","getFontFamily","getRawGlyphMap","hasIcon","createStyledIconClass","selectClass","IconClass","selectedIconSet","SelectedIconClass","PureComponent","propTypes","PropTypes","bool","defaultProps","Icon","Button"],"sources":["/Users/hamid/Desktop/mixprj/node_modules/react-native-vector-icons/lib/create-multi-style-icon-set.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport createIconSet, {\n  DEFAULT_ICON_COLOR,\n  DEFAULT_ICON_SIZE,\n} from './create-icon-set';\n\nexport default function createMultiStyleIconSet(styles, optionsInput = {}) {\n  const styleNames = Object.keys(styles);\n\n  if (styleNames.length === 0) {\n    throw new Error('You need to add at least one style');\n  }\n\n  const options = {\n    defaultStyle: styleNames[0],\n    fallbackFamily: () => styleNames[0],\n    glyphValidator: () => true,\n    ...optionsInput,\n  };\n\n  const iconSets = styleNames.reduce((acc, name) => {\n    const style = styles[name];\n\n    acc[name] = createIconSet(\n      style.glyphMap || {},\n      style.fontFamily || '',\n      style.fontFile || '',\n      style.fontStyle || {}\n    );\n\n    return acc;\n  }, {});\n\n  function styleFromProps(props) {\n    return Object.keys(props).reduce(\n      (result, propName) =>\n        styleNames.indexOf(propName) !== -1 && props[propName] === true\n          ? propName\n          : result,\n      options.defaultStyle\n    );\n  }\n\n  function getIconSetForProps(props) {\n    const { name } = props;\n    const style = styleFromProps(props);\n\n    if (options.glyphValidator(name, style)) return iconSets[style];\n\n    const family = options.fallbackFamily(name);\n\n    if (styleNames.indexOf(family) === -1) {\n      return options.defaultStyle;\n    }\n\n    return iconSets[family];\n  }\n\n  function selectIconClass(iconSet, iconClass) {\n    return iconClass.length > 0 ? iconSet[iconClass] : iconSet;\n  }\n\n  function reduceProps(props) {\n    return Object.keys(props).reduce((acc, prop) => {\n      if (styleNames.indexOf(prop) === -1) {\n        acc[prop] = props[prop];\n      }\n\n      return acc;\n    }, {});\n  }\n\n  function getStyledIconSet(style, name = '') {\n    if (styleNames.indexOf(style) === -1) {\n      return iconSets[options.defaultStyle];\n    }\n\n    return !name\n      ? iconSets[styleFromProps({ [style]: true })]\n      : getIconSetForProps({ name, [style]: true });\n  }\n\n  function getImageSource(\n    name,\n    size = DEFAULT_ICON_SIZE,\n    color = DEFAULT_ICON_COLOR,\n    style = options.defaultStyle\n  ) {\n    return getStyledIconSet(style, name).getImageSource(name, size, color);\n  }\n\n  function getFontFamily(style = options.defaultStyle) {\n    return getStyledIconSet(style).getFontFamily();\n  }\n\n  function getRawGlyphMap(style = options.defaultStyle) {\n    return getStyledIconSet(style).getRawGlyphMap();\n  }\n\n  function hasIcon(name, style = options.defaultStyle) {\n    return options.glyphValidator(name, style);\n  }\n\n  function createStyledIconClass(selectClass = '') {\n    class IconClass extends PureComponent {\n      static propTypes = styleNames.reduce((acc, name) => {\n        acc[name] = PropTypes.bool;\n        return acc;\n      }, {});\n\n      static defaultProps = styleNames.reduce((acc, name) => {\n        acc[name] = false;\n        return acc;\n      }, {});\n\n      render() {\n        const selectedIconSet = getIconSetForProps(this.props);\n        const SelectedIconClass = selectIconClass(selectedIconSet, selectClass);\n        const props = reduceProps(this.props);\n\n        return <SelectedIconClass {...props} />;\n      }\n    }\n\n    return IconClass;\n  }\n\n  const Icon = createStyledIconClass();\n  Icon.Button = createStyledIconClass('Button');\n  Icon.getStyledIconSet = getStyledIconSet;\n  Icon.getImageSource = getImageSource;\n  Icon.getFontFamily = getFontFamily;\n  Icon.getRawGlyphMap = getRawGlyphMap;\n  Icon.hasIcon = hasIcon;\n\n  return Icon;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}